A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the user's questions. USER: i see what's wrong " for tag in tags:
 self.check\_performer\_tagged\_once(tags, tag\_names)
 tag = tag.replace("Upscale ", "")
 scale\_setting = self.get\_scale\_setting(tag)
 if not scale\_setting:
 self.debug("No scale setting in tags, Removing tag: "+tag)
 scale\_value = scale\_setting
 mode\_setting = self.get\_mode\_setting(tag)
 if not mode\_setting:
 self.debug("No mode setting in tags, Removing tag: "+tag)
 mode\_value = mode\_setting
 performer\_id = performer[1]
 image\_path = performer[0]" It's for tag in tags:. It's supposed to be if tag in tag\_names and only then if tag in tags: ASSISTANT: Yes, that is correct. You should only be processing the performer images if the tag is present in the list of tag names. By looping through all tags, you may be processing tags that are not relevant to the current operation, which could cause errors or unexpected behavior.
You can change the for loop to check if the tag is in tag\_names and only then process the image.
```lua
for tag in tags:
    if tag in tag_names:
        self.check_performer_tagged_once(tags, tag_names)
        tag = tag.replace("Upscale ", "")
        scale_setting = self.get_scale_setting(tag)
        if not scale_setting:
            self.debug("No scale setting in tags, Removing tag: "+tag)
        scale_value = scale_setting
        mode_setting = self.get_mode_setting(tag)
        if not mode_setting:
            self.debug("No mode setting in tags, Removing tag: "+tag)
        mode_value = mode_setting
        performer_id = performer[1]
        image_path = performer[0]
```
This way, you can ensure that only the tags that are relevant to the current operation are processed, and you can prevent unnecessary errors from occurring.<|>USER: This way some parts with have 5 tabs of nesting, should I separate it into a function itself? Here is the entire function " def process\_performer\_image(self, performer, tag\_names): 
 performer\_id = performer[0] # Initialize performer\_id here
 performer\_name = performer[1]
 tags = self.findPerformersTagsbyID(performer\_name)
 if not set(tags).intersection(tag\_names):
 return
 self.check\_tags\_not\_empty(tags)
 for tag in tags:
 self.check\_performer\_tagged\_once(tags, tag\_names)
 tag = tag.replace("Upscale ", "")
 scale\_setting = self.get\_scale\_setting(tag)
 if not scale\_setting:
 self.debug("No scale setting in tags, Removing tag: "+tag)
 scale\_value = scale\_setting
 mode\_setting = self.get\_mode\_setting(tag)
 if not mode\_setting:
 self.debug("No mode setting in tags, Removing tag: "+tag)
 mode\_value = mode\_setting
 performer\_id = performer[1]
 image\_path = performer[0]
 self.error("image\_path: "+image\_path)
 self.error("performer\_id: "+performer\_id)
 self.error("scale\_setting: "+str(scale\_setting))
 self.error("scale\_value: "+str(scale\_value))
 self.error("mode\_setting: "+str(mode\_setting))
 self.error("mode\_value: "+str(mode\_value))
 self.processPerformerImage(image\_path, performer\_id, scale\_setting, scale\_value, mode\_setting, mode\_value)

" ASSISTANT: It's always a good idea to separate code into smaller, more manageable functions. It makes the code more readable and easier to maintain. In this case, you could extract the code that processes the performer image and put it in a separate function. This would make the `process_performer_image` function shorter and easier to understand. You could name the new function something like `_process_performer_image_tag`, and call this function from within the `process_performer_image` function for each tag in `tag_names` that also exists in `tags`.<|>USER: how? ASSISTANT: One way to simplify the function and reduce the number of nested tabs would be to create a new function that handles the processing of a single tag. This function could take in the tag name and the performer information, and handle all the processing steps such as getting the scale and mode settings, checking for errors, and calling the `processPerformerImage` function. Then, in the `process_performer_image` function, you can iterate over the tags that the performer has, and call this new function only for the tags that are in the `tag_names` list.

Another way to simplify the function is to refactor the logic, breaking down the function into smaller functions with a single responsibility, making the function more readable and easier to understand.

Additionally, you can also add some more error handling to the function, for example, you can add some checks to see if the performer id, image path and the scale\_setting, mode\_setting are not None before calling the processPerformerImage function.<|>USER: can you code for me the new function? ASSISTANT: Sure, here is an example of a new function `process_performer_image_with_tag_check` that does the tag checking before processing the performer image:
```python
    def process_performer_image_with_tag_check(self, performer, tag_names):
        performer_id = performer[0]
        performer_name = performer[1]
        tags = self.findPerformersTagsbyID(performer_name)
        if not set(tags).intersection(tag_names):
            return
        self.check_tags_not_empty(tags)
        for tag in tag_names:
            if tag in tags:
                self.check_performer_tagged_once(tags, tag_names)
                tag = tag.replace("Upscale ", "")
                scale_setting = self.get_scale_setting(tag)
                if not scale_setting:
                    self.debug("No scale setting in tags, Removing tag: "+tag)
                scale_value = scale_setting
                mode_setting = self.get_mode_setting(tag)
                if not mode_setting:
                    self.debug("No mode setting in tags, Removing tag: "+tag)
                mode_value = mode_setting
                performer_id = performer[1]
                image_path = performer[0]
                self.error("image_path: "+image_path)
                self.error("performer_id: "+performer_id)
                self.error("scale_setting: "+str(scale_setting))
                self.error("scale_value: "+str(scale_value))
                self.error("mode_setting: "+str(mode_setting))
                self.error("mode_value: "+str(mode_value))
                self.processPerformerImage(image_path, performer_id, scale_setting, scale_value, mode_setting, mode_value)
```
You can then replace the call to `process_performer_image` with `process_performer_image_with_tag_check` in the `upscale_PerformerImage` function.
Please be aware that this is just an example, there might be some specific details of your code that I'm not aware of and you might need to adjust the code accordingly.<|>
=============================
<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> Yes, that is correct. You should only be processing the performer images if the tag is present in the list of tag names. By looping through all tags, you may be processing tags that are not relevant to the current operation, which could cause errors or unexpected behavior.
You can change the for loop to check if the tag is in tag\_names and only then process the image.
```lua
for tag in tags:
    if tag in tag_names:
        self.check_performer_tagged_once(tags, tag_names)
        tag = tag.replace("Upscale ", "")
        scale_setting = self.get_scale_setting(tag)
        if not scale_setting:
            self.debug("No scale setting in tags, Removing tag: "+tag)
        scale_value = scale_setting
        mode_setting = self.get_mode_setting(tag)
        if not mode_setting:
            self.debug("No mode setting in tags, Removing tag: "+tag)
        mode_value = mode_setting
        performer_id = performer[1]
        image_path = performer[0]
```
This way, you can ensure that only the tags that are relevant to the current operation are processed, and you can prevent unnecessary errors from occurring.<|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|> It's always a good idea to separate code into smaller, more manageable functions. It makes the code more readable and easier to maintain. In this case, you could extract the code that processes the performer image and put it in a separate function. This would make the `process_performer_image` function shorter and easier to understand. You could name the new function something like `_process_performer_image_tag`, and call this function from within the `process_performer_image` function for each tag in `tag_names` that also exists in `tags`.<<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>: One way to simplify the function and reduce the number of nested tabs would be to create a new function that handles the processing of a single tag. This function could take in the tag name and the performer information, and handle all the processing steps such as getting the scale and mode settings, checking for errors, and calling the `processPerformerImage` function. Then, in the `process_performer_image` function, you can iterate over the tags that the performer has, and call this new function only for the tags that are in the `tag_names` list.

Another way to simplify the function is to refactor the logic, breaking down the function into smaller functions with a single responsibility, making the function more readable and easier to understand.

Additionally, you can also add some more error handling to the function, for example, you can add some checks to see if the performer id, image path and the scale\_setting, mode\_setting are not None before calling the processPerformerImage function.<<|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>: Sure, here is an example of a new function `process_performer_image_with_tag_check` that does the tag checking before processing the performer image:
```python
    def process_performer_image_with_tag_check(self, performer, tag_names):
        performer_id = performer[0]
        performer_name = performer[1]
        tags = self.findPerformersTagsbyID(performer_name)
        if not set(tags).intersection(tag_names):
            return
        self.check_tags_not_empty(tags)
        for tag in tag_names:
            if tag in tags:
                self.check_performer_tagged_once(tags, tag_names)
                tag = tag.replace("Upscale ", "")
                scale_setting = self.get_scale_setting(tag)
                if not scale_setting:
                    self.debug("No scale setting in tags, Removing tag: "+tag)
                scale_value = scale_setting
                mode_setting = self.get_mode_setting(tag)
                if not mode_setting:
                    self.debug("No mode setting in tags, Removing tag: "+tag)
                mode_value = mode_setting
                performer_id = performer[1]
                image_path = performer[0]
                self.error("image_path: "+image_path)
                self.error("performer_id: "+performer_id)
                self.error("scale_setting: "+str(scale_setting))
                self.error("scale_value: "+str(scale_value))
                self.error("mode_setting: "+str(mode_setting))
                self.error("mode_value: "+str(mode_value))
                self.processPerformerImage(image_path, performer_id, scale_setting, scale_value, mode_setting, mode_value)
```
You can then replace the call to `process_performer_image` with `process_performer_image_with_tag_check` in the `upscale_PerformerImage` function.
Please be aware that this is just an example, there might be some specific details of your code that I'm not aware of and you might need to adjust the code accordingly.<|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|><|endoftext|>